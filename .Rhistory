install.packages("arule")
#load the package
library(arules)
trans_data <- read.csv("https://storage.googleapis.com/dqlab-dataset/transaksi_dqlab_retail.tsv")
trans_data <- read.csv("https://storage.googleapis.com/dqlab-dataset/transaksi_dqlab_retail.tsv",
sep = "/t")
trans_data <- read.csv("https://storage.googleapis.com/dqlab-dataset/transaksi_dqlab_retail.tsv",
sep = "\t")
head(trans_data)
?read.csv
library(tidyverse)
class(trans_data)
# CEk data
head(trans_data)
# Data di atas belum hadir dalam bentuk transaction class
# Kita bisa mengubahnya dengan cara binary matrix
# Atau kita meenggunakan fungsi write() dalam package arules untuk memformatnya ulang dalam
# bentuk transaction class
write(trans_data, file = "retail_project.txt", sep = ",")
#load the data
trans_data <- read.csv("https://storage.googleapis.com/dqlab-dataset/transaksi_dqlab_retail.tsv",
sep = "\t", cols=c(1,2), skip = 1)
#load the data
trans_data <- read.csv("https://storage.googleapis.com/dqlab-dataset/transaksi_dqlab_retail.tsv",
sep = "\t", cols=c(1,2), skip = 1, format = "single")
#load the data
trans_data <- read.csv("https://storage.googleapis.com/dqlab-dataset/transaksi_dqlab_retail.tsv",
format = "single", sep = "\t", cols=c(1,2), skip = 1)
#load the data
trans_data <- read.csv("https://storage.googleapis.com/dqlab-dataset/transaksi_dqlab_retail.tsv",
sep = "\t")
head(trans_data)
class(trans_data)
# Data di atas masih tidak efisien dan perlu diubah dalam bentuk transaction agar bisa
# diolah dalam algoritma apriori.
write(trans_data, file = "retail_trans_data.txt", sep = ",")
trans_data2 <- trans_data %>%
group_by(Kode.Transaksi,Nama.Barang) %>%
mutate(jumlah = n()) %>%
pivot_wider(names_from = Nama.Barang, values_from = jumlah, values_fill = NA)
head(trans_data2)
trans_data2 <- trans_data2[,-1]
trans_data2
trans_data2
# Ubah seluruh value matrix menjadi logika dengan apply dan as.logical
trans_data2 <- apply(trans_data2,2,as.logical)
trans_data2
# Ubah seluruh nilai NA menjadi FALSE
trans_data2[(is.na(trans_data2))] <- FALSE
head(trans_data2)
# ubah menjadi data transaction
trans_data_final <- as(trans_data2,"transactions")
inspect(trans_data_final)
head(trans_data)
# Top 10 Item
# Ini adalah script untuk menjawab pertanyaan 10 barang dengan transaksi tertinggi
# tulis data project dalam file lokal sehingga menghindari resiko hilang, berubah, dsg
write.csv(trans_data,"transaction_retail_data.csv")
# Top 10 Item
# Ini adalah script untuk menjawab pertanyaan 10 barang dengan transaksi tertinggi
# tulis data project dalam file lokal sehingga menghindari resiko hilang, berubah, dsg
write.table(trans_data,"transaction_retail_data.csv.txt", sep = "\t", row.names = FALSE,
col.names = TRUE)
# Top 10 Item
# Ini adalah script untuk menjawab pertanyaan 10 barang dengan transaksi tertinggi
# tulis data project dalam file lokal sehingga menghindari resiko hilang, berubah, dsg
write.table(trans_data,"transaction_retail_data.txt", sep = "\t", row.names = FALSE,
col.names = TRUE)
top_10 <- trans_data %>%
group_by(Nama.Barang) %>%
mutate(Jumlah_Trans = n()) %>%
arrange(desc(Jumlah_Trans))
head(top10,10)
head(top_10,10)
View(top_10)
head(trans_data,6)
# Buat kelompok top 10
top_10 <- trans_data[,-1]
head(top_10)
class(top_10)
View(trans_data_final)
# Buat kelompok top 10
top_10 <- trans_data[,-1] %>% group_by(Nama.Barang)
#load the data
trans_data <- read.csv("https://storage.googleapis.com/dqlab-dataset/transaksi_dqlab_retail.tsv",
sep = "\t", cols(c(1,2)))
#load the data
trans_data <- read.csv("https://storage.googleapis.com/dqlab-dataset/transaksi_dqlab_retail.tsv",
sep = "\t")
# Buat kelompok top 10
class(trans_data)
ncol(trans_data)
# Buat kelompok top 10
top_10 <- trans_data[Nama.Barang]
# Buat kelompok top 10
top_10 <- trans_data['Nama.Barang']
top_10 %>% group_by(Nama.Barang) %>%
mutate(Jumlah = n()) %>%
arrange(desc(Jumlah))
?itemFrequency
top_10 %>% rowwise(Nama.Barang
top_10
top_10 %>% rowwise(Nama.Barang)
top_10 %>% rowwise(Nama.Barang) %>%
mutate(Jumlah = n())
top_10 %>% rowwise(Nama.Barang) %>%
mutate(Jumlah = n()) %>% arrange(desc(Jumlah))
top_10
top_10 <- trans_data['Nama.Barang']
top_10 %>% rowwise(Nama.Barang) %>%
mutate(Jumlah = n())
%>% arrange(desc(Jumlah))
top_10 %>% rowwise(Nama.Barang) %>%
mutate(Jumlah = n()) %>%
arrange(desc(Jumlah))
top_10 %>% group_by(Nama.Barang)
top_10
# Buat kelompok top 10
head(trans_data)
top_10 <- trans_data %>% itemFrequency(Nama.Barang)
top_10 <- trans_data %>% group_by(Nama.Barang)
top_10
top_10 <- trans_data['Nama.Barang']
top_10 <- trans_data['Nama.Barang'] %>% group_by(Nama.Barang)
head(top_10)
top_10 <- trans_data['Nama.Barang'] %>% group_by(Nama.Barang) %>%
mutate(jumlah = count())
top_10 <- trans_data['Nama.Barang'] %>% group_by(Nama.Barang) %>%
mutate(jumlah = n())
head(top_10)
top_10 <- trans_data['Nama.Barang'] %>% group_by(Nama.Barang) %>%
mutate(jumlah = n()) %>%
arrange(desc(Jumlah))
top_10 <- trans_data['Nama.Barang'] %>% group_by(Nama.Barang) %>%
mutate(jumlah = n()) %>%
arrange(desc(jumlah))
head(top_10)
top_10 <- trans_data['Nama.Barang'] %>% group_by(Nama.Barang) %>%
mutate(jumlah = n()) %>% names(Nama.Barang)
top_10 <- trans_data['Nama.Barang'] %>% group_by(Nama.Barang) %>%
mutate(jumlah = n()) %>% distinct(Nama.Barang)
top_10 <- trans_data['Nama.Barang'] %>% group_by(Nama.Barang) %>%
mutate(jumlah = n()) %>% distinct(Nama.Barang) %>%
arrange(desc(jumlah))
top_10
top_10 <- trans_data['Nama.Barang'] %>% group_by(Nama.Barang) %>%
mutate(jumlah = n()) %>% distinct()
top_10 <- trans_data['Nama.Barang'] %>% group_by(Nama.Barang) %>%
mutate(jumlah = n()) %>% distinct() %>%
arrange(desc(jumlah))
head(top_10)
top_10 <- trans_data['Nama.Barang'] %>% group_by(Nama.Barang) %>%
mutate(jumlah = n()) %>% distinct() %>%
arrange(desc(jumlah)) %>% slice(1:10)
top_10
top_10 <- trans_data['Nama.Barang'] %>% group_by(Nama.Barang) %>%
mutate(jumlah = n()) %>% distinct() %>%
arrange(desc(jumlah)) %>% slice(1:10)
top_10
top_10 <- trans_data['Nama.Barang'] %>% group_by(Nama.Barang) %>%
mutate(jumlah = n()) %>% distinct() %>%
arrange(desc(jumlah))
top_10
top_10 <- trans_data['Nama.Barang'] %>% group_by(Nama.Barang) %>%
mutate(jumlah = n()) %>% distinct() %>%
arrange(desc(jumlah)) %>% head(10)
top_10
write(top_10,"top_10.txt", sep = "\t", row.names= FALSE, col.names = TRUE)
write.table(top_10,"top_10.txt", sep = "\t", row.names= FALSE, col.names = TRUE)
# coba cara dqlb tanpa install package
itemFrequency(names(trans_data$Nama.Barang))
# coba cara dqlb tanpa install package
itemFrequency(trans_data$Nama.Barang)
# coba cara dqlb tanpa install package
dq10 <- names(trans_data$Nama.Barang)
head(dq10)
# coba cara dqlb tanpa install package
dq10 <- names(trans_data)
head(dq10)
# coba cara dqlb tanpa install package
dq10 <- names(trans_data['Nama.Barang'])
head(dq10)
# coba cara dqlb tanpa install package
dq10 <- trans_data$Nama.Barang
itemFrequency(dq10)
names(dq10)
# coba cara dqlb tanpa install package
names(trans_data)
names(trans_data$Nama.Barang)
data.frame(trans_data)
dq10 <- names(trans_data$Nama.Barang)
dq10 <- itemFrequency(trans_data$Nama.Barang)
?itemFrequency()
?itemFrequency
top_10 <- trans_data['Nama.Barang'] %>% group_by(Nama.Barang) %>%
mutate(jumlah = n()) %>%
distinct() %>%
arrange(desc(jumlah)) %>%
head(10)
top_10
write.table(top_10,"top_10.txt", sep = "\t", row.names= FALSE, col.names = TRUE)
dq_trans_data <- trans_data
# top10 dqlab (without install tidyverse)
matrix(dq_trans_data)
dq_trans_data
class(dq_trans_data)
# top10 dqlab (without install tidyverse)
as.matrix(dq_trans_data)
itemFrequency(dq_trans_data$Nama.Barang)
# top10 dqlab (without install tidyverse)
dq_trans_data <- dq_trans_data[,-1]
class(dq_trans_data)
as.matrix(dq_trans_data)
itemFrequency(dq_trans_data)
as.factor(dq_trans_data)
itemFrequency(dq_trans_data)
# top10 dqlab (without install tidyverse)
dq_trans_data <- dq_trans_data[,-1]
# top10 dqlab (without install tidyverse)
dq_trans_data <- trans_data
# top10 dqlab (without install tidyverse)
dq_trans_data <- trans_data[,-1]
as.matrix(dq_trans_data)
as(dq_trans_data,"itemMatrix")
# top10 dqlab (without install tidyverse)
dq_trans_data <- trans_data
as.matrix(dq_trans_data)
as(dq_trans_data,"itemMatrix")
dq_matrix <- as(dq_trans_data,"itemMatrix")
dq_matrix <- as.matrix.data.frame(dq_trans_data, rownames.force = NA)
dq_matrix <- as(dq_matrix, "itemMatrix")
inspect(trans_data_final)
# top10 dqlab (without install tidyverse)
dq_trans_data <- trans_data_final
itemFrequency(dq_trans_data)
itemFrequency(dq_trans_data, type = "absolute")
itemFrequency(dq_trans_data)
itemFrequency(dq_trans_data)
itemFrequency(dq_trans_data, type="absolute")
dq_item_freq <- itemFrequency(dq_trans_data, type="absolute")
names(dq_item_freq)
item <- names(dq_item_freq)
dq_trans <- data.frame(cbind(item,dq_item_freq))
sort(dq_trans)
sort(dq_trans$dq_item_freq)
head(dq_trans)
dq_trans <- data.frame(item,dq_item_freq)
head(dq_trans)
dq_trans <- data.frame(item,dq_item_freq, row.names = FALSE)
dq_trans <- data.frame(item,dq_item_freq, row.names = NULL)
head(dq_trans)
head(sort(dq_trans))
?sort
dq_trans <- dq_trans[order(dq_trans$dq_item_freq)]
dq_trans <- dq_trans[order(dq_trans$dq_item_freq),]
head(dq_trans)
dq_trans <- dq_trans[order(-dq_trans$dq_item_freq),]
head(dq_trans,10)
top_10
dq_trans <- data.frame(c(item,dq_item_freq), row.names = NULL)
dq_trans
dq_trans <- data.frame(item,dq_item_freq, row.names = NULL)
head(dq_trans,10)
dq_trans <- dq_trans[order(-dq_trans$dq_item_freq),]
head(dq_trans,10)
top10_dq <- function(x){
dq_item_freq <- itemFrequency(dq_trans_data, type="absolute")
item <- names(dq_item_freq)
dq_trans <- data.frame(item,dq_item_freq, row.names = NULL, row)
dq_trans <- dq_trans[order(-dq_trans$dq_item_freq),]
head(dq_trans,10)
}
top10_dq(dq_trans_data)
top10_dq <- function(x){
dq_item_freq <- itemFrequency(dq_trans_data, type="absolute")
item <- names(dq_item_freq)
dq_trans <- data.frame(item,dq_item_freq, row.names = NULL)
dq_trans <- dq_trans[order(-dq_trans$dq_item_freq),]
head(dq_trans,10)
}
top10_dq(dq_trans_data)
save(top10_dq,"top10_dq.txt")
# load library arulesViz
install.packages("arulesViz")
# load library arulesViz
library(arulesViz)
library(arules)
library(tidyverse)
# dataset dengan read.transactions()
trans_data_direct <- read.transactions(file="https://storage.googleapis.com/dqlab-dataset/transaksi_dqlab_retail.tsv", format="single",sep="\t",cols=c(1,2),skip=1)
# dataset dengan binary matrix
trans_data_binary <- read.csv(file="https://storage.googleapis.com/dqlab-dataset/transaksi_dqlab_retail.tsv", sep="\t")
trans_data_binary2 <- trans_data_binary %>%
group_by(Kode.Transaksi,Nama.Barang) %>%
mutate(jumlah.barang = n()) %>%
pivot_wider(names_from = Nama.Barang, values_from = jumlah.barang, values_fill = NA)
#Menghilangkan variabel Kode.Transaksi karena sudah tidak diperlukan kembali
trans_data_binary2 <- trans_data_binary2[,-1]
#Konvert seluruh nilai trans_data_binary2 menjadi boolean logika
trans_data_binary2 <- apply(trans_data_binary2,2,as.logical)
# Konvert semua nilai yang NA menjadi FALSE
trans_data_binary2[(is.na(trans_data_binary2))] <- FALSE
# binary matrix sudah jadi
# dari binary matrix ini kemudian kita bisa konversi menjadi data tipe transaksi
trans_data_binary_final <- as(trans_data_binary2,"transactions")
# Cek data dari direct method
inspect(trans_data_direct[1:5])
inspect(trans_data_binary_final[1:5])
# Menghitung variabel jumlah.transaksi
jumlah.trans <-sort(itemFrequency(trans_data_direct, type = "absolute"),decreasing = TRUE)[1:10]
# Mendapatkan item
item <- names(jumlah.trans)
top10_direct <- data.frame(item = item, jumlah = jumlah.trans, row.names = NULL)
top10_direct
# Ligat trsuktur data awal
head(trans_data_binary)
top10_binary <- trans_data_binary %>%
group_by(Nama.Barang) %>%
mutate(Jumlah = n()) %>%
distinct(Jumlah) %>%
arrange(desc(Jumlah)) %>%
head(10)
top10_binary
ggplot(top10_binary) +
geom_col(aes(x = reorder(Nama.Barang,-Jumlah),y = Jumlah, fill = Nama.Barang)) +
theme(axis.text.x = element_blank()) +
scale_fill_discrete(breaks=levels(with(top10_binary,reorder(Nama.Barang,-Jumlah)))) +
labs(x = "Nama Barang", y = "Jumlah")
write.table(top10_binary, "top10.txt", sep=",")
# Menemukan 10 item dengan transaksi terendah melalui itemFrequenxy()
jumlah.trans.2 <- sort(itemFrequency(trans_data_direct, type="absolute"))[1:10]
item.2 <- names(jumlah.trans.2)
bottom10_direct <- data.frame(item = item.2, jumlah = jumlah.trans.2, row.names = NULL)
bottom10_direct
# Menemukan 10 item dengan transaksi terendah melalui data asli
bottom10 <- trans_data_binary %>%
group_by(Nama.Barang) %>%
mutate(Jumlah = n()) %>%
distinct(Jumlah) %>%
arrange(Jumlah) %>%
head(10)
bottom10
write.table(bottom10, "bottom10.txt", sep=",")
# Menganalisa asosiasi product
product_asrule <- apriori(trans_data_binary_final, parameter = list(supp = 0.1, conf = 0.2,
minlen = 2, maxlen =3))
inspect(head(product_asrule))
top10_combi <- sort(product_asrule, by = "lift", decreasing = TRUE)
inspect(head(top10_combi,10))
write(top10_combi,"top 10 combi.txt", sep = ",")
# load library arulesViz
library(arulesViz)
# objek untuk slow moving item
slow_item <- bottom10$Nama.Barang
slow_product_arules <- apriori(trans_data_binary_final, parameter =
list(supp = 0.0001, conf = 0.2),
appearance = list(default="lhs", rhs=slow_item))
inspect(head(slow_product_arules))
force_combi <- sort(slow_product_arules, by = "lift", decreasing =TRUE)
# Kombinasi untuk Celana Jeans Sobek Pria
inspect(head(subset(force_combi, rhs %in% "Celana Jeans Sobek Pria")))
# Kombinasi terbaik untuk Pelembab
inspect(head(subset(force_combi, rhs %in% "Pelembab")))
inspect(head(subset(force_combi, rhs %in% "Hair Dye")))
inspect(head(subset(force_combi, rhs %in% "Dompet Unisex")))
inspect(head(subset(force_combi, rhs %in% "Tas Kosmetik")))
inspect(head(subset(force_combi, rhs %in% "Stripe Pants")))
inspect(head(subset(force_combi, rhs %in% "Tali Ban Ikat Pinggang")))
inspect(head(subset(force_combi, rhs %in% "Baju Renang Pria Anak-anak")))
inspect(head(subset(force_combi, rhs %in% "Atasan Baju Belang")))
# load library arulesViz
library(arulesViz)
plot(top10_combi, method = "graph")
top10_combi <- sort(product_asrule, by = "lift", decreasing = TRUE)[1:10]
inspect(head(top10_combi,10))
write(top10_combi,"top 10 combi.txt", sep = ",")
# load library arulesViz
library(arulesViz)
plot(top10_combi, method = "graph")
library(arules)
library(tidyverse)
top10_binary
trans_data_direct
